#!/usr/bin/env python3
import argparse
import json
import os

import imgtestlib as testlib


def main():
    desc = "Upload the results of a successful build (and boot) test to s3"
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument("distro", type=str, default=None, help="distro for the image to boot test")
    parser.add_argument("image_type", type=str, default=None, help="type of the image to boot test")
    parser.add_argument("config", type=str, help="config used to build the image")

    args = parser.parse_args()
    distro = args.distro
    image_type = args.image_type
    config_path = args.config
    arch = os.uname().machine

    with open(config_path, "r", encoding="utf-8") as config_file:
        config = json.load(config_file)
        config_name = config["name"]

    build_dir = os.path.join("build", testlib.gen_build_name(distro, arch, image_type, config_name))

    # get the manifest ID to use in the destination path
    manifest_path = os.path.join(build_dir, "manifest.json")
    with open(manifest_path, "r", encoding="utf-8") as manifest_fp:
        manifest_data = json.load(manifest_fp)
    manifest_id = testlib.get_manifest_id(manifest_data)

    # add the PR number (gitlab branch name) to the info.json if available
    if pr_number := os.environ.get("CI_COMMIT_BRANCH"):
        info_path = os.path.join(build_dir, "info.json")
        with open(info_path, "r", encoding="utf-8") as info_fp:
            build_info = json.load(info_fp)
        # strip the PR prefix
        build_info["pr"] = pr_number.removeprefix("PR-")
        with open(info_path, "w", encoding="utf-8") as info_fp:
            json.dump(build_info, info_fp, indent=2)

    s3url = testlib.gen_build_info_s3(distro, arch, manifest_id)

    print(f"⬆️ Uploading {build_dir} to {s3url}")
    testlib.runcmd_nc(["aws", "s3", "cp", "--no-progress", "--acl=private", "--recursive", build_dir+"/", s3url])
    print("✅ DONE!!")


if __name__ == "__main__":
    main()
