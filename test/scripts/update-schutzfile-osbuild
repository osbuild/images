#!/usr/bin/env python3
import json
import os
import sys
import urllib.request

import imgtestlib as testlib


def osbuild_main_commit_id():
    token = os.environ.get("GITHUB_TOKEN")
    req = urllib.request.Request("https://api.github.com/repos/osbuild/osbuild/commits/main")
    req.add_header("Accept", "application/vnd.github+json")
    if token:
        # this API request doesn't necessarily require a token, but let's use it if we have one
        req.add_header("Authorization", f"Bearer {token}")
    try:
        with urllib.request.urlopen(req, timeout=30) as resp:
            body = resp.read()
    except urllib.error.HTTPError as http_error:
        print(http_error)
        sys.exit(1)

    data = json.loads(body)
    return data["sha"]


def update_osbuild_commit_ids(new):
    with open(testlib.SCHUTZFILE, encoding="utf-8") as schutzfile:
        data = json.load(schutzfile)

    for distro in data.keys():
        if data[distro].get("dependencies", {}).get("osbuild", {}).get("commit", {}):
            data[distro]["dependencies"]["osbuild"]["commit"] = new

    with open(testlib.SCHUTZFILE, encoding="utf-8", mode="w") as schutzfile:
        json.dump(data, schutzfile, indent="  ")


def main():
    main_id = osbuild_main_commit_id()
    print(f"osbuild/osbuild main commit ID: {main_id}")
    print("Updating Schutzfile")
    update_osbuild_commit_ids(main_id)


if __name__ == "__main__":
    main()
